#########################
# Project Configuration #
#########################

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hapi-pipelines"
description = "HAPI"
authors = [{name = "Michael Rans", email = "rans@email.com"}]
license = {text = "MIT"}
keywords = ["HDX", "HAPI"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]
requires-python = ">=3.8"

dependencies = [
    "hdx-python-scraper>= 2.2.1",
    "hdx-python-country>= 3.5.5",
    #"hdx-python-database[postgresql]>= 1.2.8",
    "hdx-python-database @ git+ssh://git@github.com/OCHA-DAP/hdx-python-database@build_views#egg=hdx-python-database",
    #"hapi-schema>= 0.1.1",
    "hapi-schema @ git+ssh://git@github.com/OCHA-DAP/hapi-sqlalchemy-schema@HAPI-224/remove-hdx-python-database-dep#egg=hapi-schema",
    "libhxl",
    "sqlalchemy"
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/OCHA-DAP/hapi-pipelines"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
dev = ["pre-commit"]


#########
# Hatch #
#########

# Build

[tool.hatch.build.targets.wheel]
packages = ["src/hapi"]

[tool.hatch.build.hooks.vcs]
version-file = "src/hapi/pipelines/_version.py"

[tool.hatch.metadata]
allow-direct-references = true

# Versioning

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
version_scheme = "python-simplified-semver"

# Tests

[tool.hatch.envs.test]
features = ["test"]

[tool.hatch.envs.test.scripts]
test = """
       pytest -c .config/pytest.ini --rootdir=. --junitxml=test-results.xml \
       --cov --cov-config=.config/coveragerc --no-cov-on-fail \
       --cov-report=lcov --cov-report=term-missing
       """

[[tool.hatch.envs.test.matrix]]
python = ["3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black",
  "ruff",
]

[tool.hatch.envs.lint.scripts]
style = [
  "ruff --config .config/ruff.toml {args:.}",
  "black --config .config/black.toml --check --diff {args:.}",
]
# Not used for anything at the moment
fmt = [
  "black --config .config/black.toml {args:.}",
  "ruff --config .config/ruff.toml --fix {args:.}",
]
